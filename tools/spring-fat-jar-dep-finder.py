# -*- coding: utf8 -*-

import argparse
import os
import zipfile


LIB_PREFIX = "BOOT-INF/lib/"

def find(path, lib_name):
    with zipfile.ZipFile(path, "r") as jar_file:
        files = jar_file.namelist()
        target = "%s%s" % (LIB_PREFIX, lib_name)
        if lib_name.endswith(".jar"):
            return target in files
        return any(map(lambda x: x.startswith(target), files))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-f", dest="path", required=True, help="file or dir")
    parser.add_argument("-n", dest="name", required=True, help="full name or prefix")
    args = parser.parse_args()
    path = args.path
    if not os.path.exists(path):
        print("[!] [%s] not exists !!!" % path)
        exit(-1)
    if os.path.isfile(path):
        files = [path]
    else:
        files = filter(lambda x: x.endswith(".jar"), [os.path.join(path, name) for name in os.listdir(path)])
    for f in files:
        print("[*] %s" % f, end=" ")
        print("\033[91mFound !!!\033[0m") if find(f, args.name) else print("")


if __name__ == '__main__':
    main()
